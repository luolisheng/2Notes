---
title: iOS 编译 Clang LLVM
tags: ["iOS"]
notebook: iOS
---

### 编译过程

1. 预处理
	1. 处理‘预处理符号’，宏展开、头文件引入
2. 编译
	1. 词法分析
	2. 语法分析
	3. 语义分析
	4. 生成中间码(语言无关、平台无关)
3. 汇编
	1. 把中间码生成具体品台的汇编
	2. 生成机器码
4. 链接
	1. 把每个机器码编译单位中引用的其他编译单位中的变量、函数符号修正成真实的地址

传统编译器通常分为三个部分
1. 前端(frontEnd)，负责词法和语法分析，将源代码转化为抽象语法树
2. 优化器(Optimizer)，在前端的基础上对中间代码进行优化，使得代码更加高效
3. 后端(backEnd)，将已经优化的的中间代码转化为针对各自平台的机器代码

Clang是LLVM的编译前端，可以用来编译C、C++、OC等语言。

### 参考

1. [link1](https://github.com/ming1016/study/wiki/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90-iOS-%E7%BC%96%E8%AF%91-Clang---LLVM)
2. [link2](http://blog.mrriddler.com/2017/02/10/%E7%BC%96%E8%AF%91%E4%BD%93%E7%B3%BB%E6%BC%AB%E6%B8%B8/)